{
  "rules": {
    "users": {
      ".read": "auth != null && root.child('users/' + auth.uid + '/profile/isAdmin').val() === true",
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users/' + auth.uid + '/profile/isAdmin').val() === true)",
        ".write": "auth != null && (auth.uid === $uid || root.child('users/' + auth.uid + '/profile/isAdmin').val() === true)",
        "profile": {
          ".read": "auth != null && (auth.uid === $uid || root.child('users/' + auth.uid + '/profile/isAdmin').val() === true)",
          ".write": "auth != null && (auth.uid === $uid || root.child('users/' + auth.uid + '/profile/isAdmin').val() === true)",
          "isAdmin": {
            ".write": "auth != null && root.child('users/' + auth.uid + '/profile/isAdmin').val() === true"
          },
          "clientBaseId": {
            ".write": "auth != null && (auth.uid === $uid && newData.parent().child('isAdmin').val() === false || root.child('users/' + auth.uid + '/profile/isAdmin').val() === true)"
          }
        }
      }
    },
    "clientBases": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users/' + auth.uid + '/profile/isAdmin').val() === true",
      "$clientBaseId": {
        ".read": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || data.child('authorizedUIDs').child(auth.uid).exists())",
        ".write": "auth != null && root.child('users/' + auth.uid + '/profile/isAdmin').val() === true",
        ".validate": "newData.hasChildren(['name', 'numberId', 'authorizedUIDs', 'createdAt', 'createdBy']) && newData.child('name').isString() && newData.child('numberId').isNumber() && newData.child('createdBy').isString() && (newData.child('createdAt').isNumber() || (newData.child('createdAt').hasChild('.sv') && newData.child('createdAt/.sv').val() === 'timestamp')) && newData.child('authorizedUIDs').exists() && !newData.child('authorizedUIDs').isString() && !newData.child('authorizedUIDs').isNumber() && !newData.child('authorizedUIDs').isBoolean()",
        "authorizedUIDs": {
          ".write": "auth != null && root.child('users/' + auth.uid + '/profile/isAdmin').val() === true",
          "$authorizedUserUid": {
            ".write": "auth != null && auth.uid === $authorizedUserUid && newData.hasChildren(['displayName', 'email']) && newData.child('displayName').isString() && newData.child('email').isString()"
          }
        },
        "appStores": {
          ".read": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".write": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          "$storeId": {
            ".validate": "newData.hasChildren(['baseId', 'name', 'createdAt']) && newData.child('baseId').isString() && newData.child('baseId').val() === $clientBaseId && newData.child('name').isString()"
          },
          ".indexOn": ["name", "createdAt", "isDefault", "baseId"]
        },
        "appCategories": {
          ".read": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".write": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".indexOn": ["name", "createdAt", "type"]
        },
        "appTransactions": {
          ".read": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".write": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".indexOn": ["date", "storeId", "categoryId", "type", "createdAt"]
        },
        "appPaymentMethods": {
          ".read": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".write": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".indexOn": ["name", "createdAt"]
        },
        "appMovementTypes": {
          ".read": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".write": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".indexOn": ["name", "category", "createdAt"]
        },
        "appClosings": {
          ".read": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".write": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".indexOn": ["closingDate", "storeId", "createdAt"]
        },
        "appGoals": {
          ".read": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".write": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || root.child('clientBases/' + $clientBaseId + '/authorizedUIDs').child(auth.uid).exists())",
          ".indexOn": ["storeId", "targetDate", "metric", "createdAt"]
        }
      },
      ".indexOn": ["name", "createdBy", "numberId"]
    },
    "invites": {
      ".read": "true",
      ".write": "auth != null && root.child('users/' + auth.uid + '/profile/isAdmin').val() === true",
      "$inviteToken": {
        ".read": "true",
        ".write": "auth != null && (root.child('users/' + auth.uid + '/profile/isAdmin').val() === true || newData.child('status').val() === 'used')",
        ".validate": "newData.hasChildren(['clientBaseId', 'clientBaseNumberId', 'createdBy', 'createdAt', 'status']) && newData.child('status').val().matches(/^(pending|used|expired)$/)",
        "status": {
          ".write": "auth != null && newData.isString() && newData.val() === 'used'"
        }
      }
    }
  }
}
